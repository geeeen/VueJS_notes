store.js
import Vue from "vue";
import Vuex from "vuex";

Vue.use(Vuex);

export const store = new Vuex.Store({
  state: {
    counter: 0
  },
  getters: {
    doubleCounter: state => {
      return state.counter * 2;
    },
    stringCounter: state => {
      return state.counter + " Clicks";
    }
  },
  mutations: {
    increment: state => {
      state.counter++;
    },
    decrement: state => {
      state.counter--;
    }
  }
});

main.js
new Vue({
  el: "#app",
  store,
  router,
  render: h => h(App)
});
___________________________________________________

file.vue 
$store.state.counter          ————  in template
this.$store.state.counter++

$store.getters.doubleCounter                getters
$store.commit("mutatuin_name")		    mutations	
$store.dispatch('asyncIncrement')           actions
__________________________________________________
	or we can use mapGetters

import { mapGetters } from "vuex";

computed: {
  ...mapGetters(["doubleCounter", "stringCounter"]),
  myCustomComputedVal() {}
} OR 
computed: mapGetters(["doubleCounter", "stringCounter"])   (but we can't add another computed value)

_____________________________________________________
	or we can use mapMutations

<button @click="decrement">Decrement</button>

import { mapMutations } from "vuex";
methods: {
  ...mapMutations(['increment', 'decrement']),
  anotherMethods() {}
}
